// <auto-generated />
using System;
using Flic.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Flic.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250518020153_AddGoogleSsoLogs")]
    partial class AddGoogleSsoLogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Flic.Shared.LogModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("LogModels");
                });

            modelBuilder.Entity("Flic.Shared.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleAbstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Flic.Shared.Models.DKHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("DaThanhtoan")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ghichu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<int?>("Hocphi")
                        .HasColumnType("int");

                    b.Property<string>("HovaDem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoahocID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LopID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSinhvien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhtoan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentOrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PaymentSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TTGiaodich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.Property<string>("VnPayResponseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DKHocs");
                });

            modelBuilder.Entity("Flic.Shared.Models.DMDantoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DMDantocs");
                });

            modelBuilder.Entity("Flic.Shared.Models.DMTinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DMTinhs");
                });

            modelBuilder.Entity("Flic.Shared.Models.DangkyTH03", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD_NgayCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD_NoiCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DKOnThi")
                        .HasColumnType("int");

                    b.Property<int>("DanToc")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaDiemThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiemLT")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTH")
                        .HasColumnType("float");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DotThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DuDKThi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ghichu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HovaDem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ketqua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoahocID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LePhiOn")
                        .HasColumnType("int");

                    b.Property<int?>("LePhiThi")
                        .HasColumnType("int");

                    b.Property<bool>("Lock")
                        .HasColumnType("bit");

                    b.Property<string>("LopID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSinhvien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matkhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoiSinh_Tinh")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentOrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PaymentSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhongThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoBD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoChungChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPhach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoVaoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taikhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.Property<string>("VnPayResponseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DangkyTH03s");
                });

            modelBuilder.Entity("Flic.Shared.Models.Diemthi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diemthis");
                });

            modelBuilder.Entity("Flic.Shared.Models.Dotthi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhiOn")
                        .HasColumnType("int");

                    b.Property<int?>("Phithi")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dotthis");
                });

            modelBuilder.Entity("Flic.Shared.Models.GoogleSsoLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GoogleSsoLogs", (string)null);
                });

            modelBuilder.Entity("Flic.Shared.Models.Khoa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("Flic.Shared.Models.Khoahoc", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Khoahocs");
                });

            modelBuilder.Entity("Flic.Shared.Models.Khoanthu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("KhoahocID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KyThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLoaiKhoanThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SoTien")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Khoanthus");
                });

            modelBuilder.Entity("Flic.Shared.Models.KyThanhtoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoaiKhoanthu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KyThanhtoans");
                });

            modelBuilder.Entity("Flic.Shared.Models.LoaiKhoanthu", b =>
                {
                    b.Property<string>("MaLoaiKhoanThu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiKhoanThu");

                    b.ToTable("LoaiKhoanthus");
                });

            modelBuilder.Entity("Flic.Shared.Models.LoaiLophoc", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.Property<string>("guid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiLophocs");
                });

            modelBuilder.Entity("Flic.Shared.Models.Lop", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoaID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoahocID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lops");
                });

            modelBuilder.Entity("Flic.Shared.Models.Lophoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hocphi")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QRActive")
                        .HasColumnType("bit");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.Property<bool?>("VNPAYActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Lophocs");
                });

            modelBuilder.Entity("Flic.Shared.Models.Nganh", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nganhs");
                });

            modelBuilder.Entity("Flic.Shared.Models.PhongKTX", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PhongKTXs");
                });

            modelBuilder.Entity("Flic.Shared.Models.RequestGachNo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("addInfor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryKeyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timeUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("RequestGachNos");
                });

            modelBuilder.Entity("Flic.Shared.Models.RequestVanTin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("RequestVanTins");
                });

            modelBuilder.Entity("Flic.Shared.Models.ResponseGachNo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("addInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("confirmTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ResponseGachNos");
                });

            modelBuilder.Entity("Flic.Shared.Models.ResponseItem", b =>
                {
                    b.Property<string>("order")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("order");

                    b.ToTable("ResponseItems");
                });

            modelBuilder.Entity("Flic.Shared.Models.ResponseVanTin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("addInfor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addInfor3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryKeyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ResponseVanTins");
                });

            modelBuilder.Entity("Flic.Shared.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Flic.Shared.Models.SinhvienPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PhongId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinhvienId")
                        .HasColumnType("int");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SinhvienPhongs");
                });

            modelBuilder.Entity("Flic.Shared.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doituong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoDem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoahocID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LopID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ngaysinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trangthai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Flic.Shared.Models.StudentStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatuses");
                });

            modelBuilder.Entity("Flic.Shared.Models.TaiChinh.TAICHINH_DuTruKP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DienGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaMucChi")
                        .HasColumnType("int");

                    b.Property<string>("MaNhom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<long>("SoTien")
                        .HasColumnType("bigint");

                    b.Property<string>("TenMucChi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TAICHINH_DuTruKP");
                });

            modelBuilder.Entity("Flic.Shared.Models.TaiChinh.TAICHINH_MucChi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoiTuong")
                        .HasColumnType("int");

                    b.Property<int>("MaTongHop")
                        .HasColumnType("int");

                    b.Property<string>("NhomMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TAICHINH_MucChi");
                });

            modelBuilder.Entity("Flic.Shared.Models.TaiChinh.TAICHINH_NhomMuc", b =>
                {
                    b.Property<string>("MaNhom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhom");

                    b.ToTable("TAICHINH_NhomMuc");
                });

            modelBuilder.Entity("Flic.Shared.Models.ThuTien", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("KyThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiKhoanthuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SinhVienID")
                        .HasColumnType("int");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<string>("ThanhtoanReqId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ThuTiens");
                });

            modelBuilder.Entity("Flic.Shared.Models.Tin03_Trangthai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tin03_Trangthais");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8f5b53c7-c9cd-41b8-9051-26809ec3be07",
                            ConcurrencyStamp = "3015bd87-8317-4931-acef-f6b6dd1e1213",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "1a0d8032-7d85-4bf3-b838-2e45c749e053",
                            ConcurrencyStamp = "0c87b917-f443-4c4a-b9fa-87f65e6e8d6c",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "b76796dc-4653-45ad-8501-a98721d12fea",
                            ConcurrencyStamp = "9da69727-3c5a-4c6d-b271-1486ecbf24f0",
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        },
                        new
                        {
                            Id = "27cf2637-58c0-4e91-998a-cca27d431074",
                            ConcurrencyStamp = "1798a8db-9835-4b09-b010-e75b27a303f0",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
