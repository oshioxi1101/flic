@page "/StudentList1"
@inject NavigationManager NavigationManager
@using Flic.Shared
@using Newtonsoft.Json
@inject HttpClient Http
@inject NorthwindService service

<!-- Import Tailwind CSS -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="min-h-screen bg-gray-100">
    <PageTitle>Danh sách Sinh viên</PageTitle>

    <AuthorizeView>
        <NotAuthorized>
            <div class="flex items-center justify-center h-screen">
                <span class="text-xl font-semibold text-red-600">Bạn không có quyền truy cập.</span>
            </div>
        </NotAuthorized>
        <Authorized Context="Auth">
            <div class="container mx-auto px-4 py-8">
                <!-- Header -->
                <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                    <h3 class="text-2xl font-bold text-gray-800">Danh sách Sinh viên</h3>
                    <div class="flex space-x-4">
                        <button @onclick='() => OnClick("/StudentAdd")' class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200">
                            Thêm mới
                        </button>
                        <button @onclick='() => OnClick("/StudentImport")' class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition duration-200">
                            Import
                        </button>
                        <button @onclick='() => Export("excel")' class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition duration-200">
                            Export XLS
                        </button>
                    </div>
                </div>

                <!-- Filter Section -->
                <div class="mb-6">
                    <label for="khoahoc" class="block text-sm font-medium text-gray-700 mb-2">Khóa học</label>
                    <select @onchange="ChangeKhoahoc" id="khoahoc" class="block w-full sm:w-1/2 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        <option value="" disabled>--Chọn Khóa học--</option>
                        @if (KhoahocList != null)
                        {
                            @foreach (var khoahoc in KhoahocList)
                            {
                        <option value="@khoahoc.Id" selected="@(item.KhoahocID == khoahoc.Id)">@khoahoc.Name</option>
                            }
                        }
                    </select>
                </div>

                <!-- Responsive Table -->
                <div class="bg-white shadow-md rounded-lg overflow-hidden">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mã SV</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Họ đệm</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngày sinh</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Khóa</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngành</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lớp</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trạng thái</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Hành động</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @if (isLoading)
                                {
                                    <tr>
                                        <td colspan="10" class="px-6 py-4 text-center text-sm text-gray-500">Đang tải...</td>
                                    </tr>
                                }
                                else if (item?.student_list != null && item.student_list.Any())
                                {
                                    @foreach (var student in item.student_list)
                                    {
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.id</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.MaSV</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.HoDem</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@student.Ten</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@@student.Ngaysinh?.ToString("dd/MM/yyyy")</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.KhoahocID</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.NganhID</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.LopID</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@student.Trangthai</td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                                <a href="/StudentEdit/@student.id" class="text-blue-600 hover:text-blue-800">Sửa</a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="px-6 py-4 text-center text-sm text-gray-500">Không có dữ liệu.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private StudentSearchOption item = new StudentSearchOption();
    private List<Khoahoc> KhoahocList = new List<Khoahoc>();
    bool isLoading;
    int count;

    List<string> khoahocList = new List<string>();
    IEnumerable<string> selectedKhoahoc;
    List<string> nganhList = new List<string>();
    IEnumerable<string> selectedNganh;
    List<string> lopList = new List<string>();
    IEnumerable<string> selectedLop;
    List<string> trangthaiFilterList = new List<string>();
    IEnumerable<string> selectedTrangthai;

    void OnClick(string link)
    {
        NavigationManager.NavigateTo(link, true);
    }

    protected async Task ChangeKhoahoc(ChangeEventArgs args)
    {
        item.KhoahocID = args.Value?.ToString();
        if (!string.IsNullOrEmpty(item.KhoahocID))
        {
            try
            {
                isLoading = true;
                var response = await Http.PostAsJsonAsync<StudentSearchOption>("/api/student/PostStudentList", item);
                if (response.IsSuccessStatusCode)
                {
                    var strinResp = await response.Content.ReadAsStringAsync();
                    item = JsonConvert.DeserializeObject<StudentSearchOption>(strinResp);
                    count = item.student_list?.Count ?? 0;
                    await InvokeAsync(StateHasChanged);
                }
                else if ((int)response.StatusCode == 401)
                {
                    NavigationManager.NavigateTo("/Login", true);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine("Error: " + e.Message);
            }
            finally
            {
                isLoading = false;
            }
        }
        else
        {
            item.student_list = null;
            count = 0;
            await InvokeAsync(StateHasChanged);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            isLoading = true;
            KhoahocList = await Http.GetFromJsonAsync<List<Khoahoc>>("api/Khoahoc/KhoahocGetList");
            if (KhoahocList != null)
            {
                foreach (var it in KhoahocList)
                {
                    khoahocList.Add(it.Id);
                }
                item.KhoahocID = khoahocList.LastOrDefault();
            }

            var response = await Http.PostAsJsonAsync<StudentSearchOption>("/api/student/PostStudentList", item);
            if (response.IsSuccessStatusCode)
            {
                var strinResp = await response.Content.ReadAsStringAsync();
                item = JsonConvert.DeserializeObject<StudentSearchOption>(strinResp);
                count = item.student_list?.Count ?? 0;
            }
            else if ((int)response.StatusCode == 401)
            {
                NavigationManager.NavigateTo("/Login", true);
            }

            var nganhListTask = Http.GetFromJsonAsync<List<Nganh>>("api/Nganh/NganhGetList");
            var lopListTask = Http.GetFromJsonAsync<List<Lop>>("api/Lop/LopGetList");
            var trangthaiListTask = Http.GetFromJsonAsync<List<StudentStatus>>("api/StudentStatus/StudentStatusGetList");

            var nganhListResult = await nganhListTask;
            if (nganhListResult != null)
            {
                foreach (var it in nganhListResult)
                {
                    nganhList.Add(it.Id);
                }
            }

            var lopListResult = await lopListTask;
            if (lopListResult != null)
            {
                foreach (var it in lopListResult)
                {
                    lopList.Add(it.Id);
                }
            }

            var trangthaiListResult = await trangthaiListTask;
            if (trangthaiListResult != null)
            {
                foreach (var it in trangthaiListResult)
                {
                    trangthaiFilterList.Add(it.Id);
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Error: " + e.Message);
        }
        finally
        {
            isLoading = false;
        }
    }

    public void Export(string type)
    {
        try
        {
            Query q = new Query()
            {
                Select = "id,MaSV,HoDem,Ten,Ngaysinh,KhoahocID,NganhID,LopID,Trangthai"
            };
            service.Export("Students", type, q);
        }
        catch (Exception e)
        {
            Console.WriteLine("Error: " + e.Message);
        }
    }
}