@page "/SectionAdd/"
@using Flic.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<AuthorizeView>
    <NotAuthorized>
        <span>Bạn phải đăng nhập bằng tài khoản quản trị để thực hiện chức năng này</span>
    </NotAuthorized>
    <Authorized Context="Auth">
        <div class="row">
            <h3>Thêm mục tin</h3>
            <RadzenTemplateForm TItem="Section" Data=@item Submit=@OnSubmit>               
                <div class="row">
                    <div class="col-2">
                        <RadzenLabel Component="Name" Text="Tên mục tin" />
                    </div>
                    <div class="col-6">
                        <RadzenTextBox Name="Name" @bind-Value=@item.Name />
                    </div>
                    <div class="col-2">
                        <RadzenRequiredValidator Component="Name" Text="Nhập tên mục tin" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-2">
                    </div>
                    <div class="col-6">
                        <RadzenButton ButtonType="ButtonType.Submit" Text="Lưu" />
                        <RadzenButton ButtonType="ButtonType.Button" Click=@Cancel Text="Hủy" />
                    </div>
                    <div class="col-2">
                    </div>
                </div>

            </RadzenTemplateForm>
        </div>
    </Authorized>
</AuthorizeView>


@code {
    Section item = new Section();

    protected async Task OnSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Section/SectionAdd", @item);
            if (response.IsSuccessStatusCode)
            {
                await JsRuntime.InvokeVoidAsync("alert", "Saved Successfully!");
                NavigationManager.NavigateTo("SectionList");
            }else
            {
                await JsRuntime.InvokeVoidAsync("alert", "Error: " +  response.StatusCode + " " + response.Content.ToString());
            }

        }
        catch (Exception e)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Error:" + e.Message);
        }

    }
    void Cancel()
    {
        NavigationManager.NavigateTo("SectionList");
    }
}
