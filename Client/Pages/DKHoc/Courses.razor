@page "/Courses"
@layout NoHeaderLayout
@using Flic.Shared
@using Flic.Shared.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<!-- Import Tailwind CSS and Bootstrap JS -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    ::-webkit-scrollbar {
        width: 8px;
    }
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
</style>

<div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <header class="bg-white shadow-md sticky top-0 z-50">
        <div class="container mx-auto px-4 py-4 flex items-center justify-between">
            <a href="/" class="text-2xl font-bold text-indigo-600">FLIC-VYA</a>
            <nav class="hidden md:flex space-x-6">
                <a href="/" class="text-gray-600 hover:text-indigo-600">Home</a>
                <a href="#about" class="text-gray-600 hover:text-indigo-600">Giới thiệu</a>
                <a href="#services" class="text-gray-600 hover:text-indigo-600">Dịch vụ</a>
                <a href="#courses" class="text-gray-600 hover:text-indigo-600">Khóa học</a>
                <a href="#contact" class="text-gray-600 hover:text-indigo-600">Liên hệ</a>
            </nav>
            @if (!string.IsNullOrEmpty(user_name))
            {
                <div class="flex items-center space-x-2">
                    <span class="text-sm font-medium text-gray-600">Xin chào, @user_name</span>
                    <a href="/logout" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Đăng xuất</a>
                </div>
            }
            else
            {
                <a href="/Login" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Đăng nhập</a>
            }
            <!-- Mobile Menu Toggle -->
            <button class="md:hidden text-gray-600 focus:outline-none" @onclick="ToggleMobileMenu">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                </svg>
            </button>
        </div>
        <!-- Mobile Menu -->
        @if (isMobileMenuOpen)
        {
            <div class="md:hidden bg-white shadow-md">
                <nav class="flex flex-col px-4 py-2 space-y-2">
                    <a href="/" class="text-gray-600 hover:text-indigo-600">Home</a>
                    <a href="#about" class="text-gray-600 hover:text-indigo-600">Giới thiệu</a>
                    <a href="#services" class="text-gray-600 hover:text-indigo-600">Dịch vụ</a>
                    <a href="#courses" class="text-gray-600 hover:text-indigo-600">Khóa học</a>
                    <a href="#contact" class="text-gray-600 hover:text-indigo-600">Liên hệ</a>
                </nav>
            </div>
        }
    </header>

    <!-- Main Content -->
    <div class="container mx-auto px-4 py-8 max-w-7xl pt-20 overflow-y-auto max-h-screen">
        @if (isLoading)
        {
            <div class="flex flex-col items-center justify-center min-h-[50vh]">
                <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-blue-500"></div>
                <p class="mt-4 text-gray-600 text-lg">Đang tải danh sách khóa học...</p>
            </div>
        }
        else
        {
            <!-- Breadcrumb -->
            <section class="mb-6">
                <nav aria-label="breadcrumb">
                    <ol class="flex flex-wrap text-sm text-gray-600">
                        <li class="mr-2"><a href="/" class="hover:text-blue-600">Trang chủ</a></li>
                        <li class="mr-2">/</li>
                        <li class="text-gray-800 font-medium">Khóa học</li>
                    </ol>
                </nav>
            </section>

            <!-- Search and Filter -->
            <section class="mb-8">
                <div class="bg-white rounded-lg shadow-md p-6">
                    <div class="flex flex-col md:flex-row gap-4">
                        <div class="flex-1">
                            <input type="text" @bind="searchTerm" @bind:event="oninput" placeholder="Tìm kiếm khóa học..." 
                                   class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600" />
                        </div>
                        <div class="flex gap-4">
                            <select @onchange="OnTypeFilterChanged" class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600">
                                <option value="">Tất cả loại khóa học</option>
                                <option value="1">Tiếng Anh</option>
                                <option value="2">Tin học</option>
                                <option value="3">Tiếng Nhật</option>
                                <option value="4">Tiếng Trung</option>
                            </select>
                            <select @onchange="OnStatusFilterChanged" class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600">
                                <option value="">Tất cả trạng thái</option>
                                <option value="1">Đang mở</option>
                                <option value="0">Đã đóng</option>
                            </select>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Course List -->
            <section class="mb-12">
                <h2 class="text-2xl font-bold text-gray-800 mb-6">Danh sách khóa học</h2>
                @if (filteredCourses == null || !filteredCourses.Any())
                {
                    <div class="text-center py-12">
                        <h3 class="text-xl font-semibold text-gray-800 mb-2">Không tìm thấy khóa học</h3>
                        <p class="text-gray-600 mb-4">Vui lòng thử tìm kiếm với các tiêu chí khác.</p>
                    </div>
                }
                else
                {
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                        @foreach (var course in filteredCourses)
                        {
                            <div class="bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-105">
                                <div class="relative">
                                    <img src="@(string.IsNullOrEmpty(course.ImagePath) ? "images/vya_no_images.jfif" : course.ImagePath)"
                                         alt="@course.TenLop" class="w-full h-48 object-cover">
                                    <span class="absolute top-4 left-4 px-3 py-1 @(course.Trangthai == 1 ? "bg-green-500" : "bg-red-500") text-white rounded-full text-sm">
                                        @(course.Trangthai == 1 ? "Đang mở" : "Đã đóng")
                                    </span>
                                </div>
                                <div class="p-4">
                                    <h3 class="text-lg font-semibold text-gray-800 mb-2">@course.TenLop</h3>
                                    <p class="text-sm text-gray-600 mb-2">@GetCourseTypeName(course.LoaiLop)</p>
                                    <div class="text-blue-600 font-medium mb-2">@FormatPrice(course.Hocphi) VNĐ</div>
                                    <p class="text-sm text-gray-600 line-clamp-2 mb-4">@course.Mota</p>
                                    <div class="flex justify-between gap-2">
                                        <a href="/CourseDetails/@course.Id" 
                                           class="flex-1 text-center px-4 py-2 bg-white border border-blue-600 text-blue-600 rounded-lg hover:bg-blue-50">
                                            Xem chi tiết
                                        </a>
                                        <button @onclick="() => RegisterForCourse(course.Id)" 
                                                class="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed"
                                                disabled="@(course.Trangthai != 1)">
                                            Đăng ký
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </section>
        }

        <!-- Footer -->
        <footer class="bg-gray-800 text-white py-4">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <p class="text-sm">© 2025 FLIC-VYA. All rights reserved.</p>
            </div>
        </footer>
    </div>
</div>

@code {
    private List<Lophoc> courses;
    private List<Lophoc> filteredCourses;
    private string searchTerm = "";
    private string typeFilter = "";
    private string statusFilter = "";
    private bool isMobileMenuOpen = false;
    private bool isLoading = true;
    private string user_name;

    protected override async Task OnInitializedAsync()
    {
        await LoadCourses();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user_name = authState.User.Identity?.Name;
    }
    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
    }
    private async Task LoadCourses()
    {
        isLoading = true;
        try
        {
            var response = await Http.GetAsync("api/LopHoc/LopHocGetList");
            if (response.IsSuccessStatusCode)
            {
                courses = await response.Content.ReadFromJsonAsync<List<Lophoc>>();
                ApplyFilters();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("console.error", "Failed to load courses: " + response.ReasonPhrase);
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "Error loading courses: " + ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ApplyFilters()
    {
        filteredCourses = courses;

        if (!string.IsNullOrEmpty(searchTerm))
        {
            filteredCourses = filteredCourses
                .Where(c => c.TenLop.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                           c.Mota.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }

        if (!string.IsNullOrEmpty(typeFilter))
        {
            filteredCourses = filteredCourses.Where(c => c.LoaiLop == typeFilter).ToList();
        }

        if (!string.IsNullOrEmpty(statusFilter))
        {
            int status = int.Parse(statusFilter);
            filteredCourses = filteredCourses.Where(c => c.Trangthai == status).ToList();
        }
    }

    private async Task OnTypeFilterChanged(ChangeEventArgs e)
    {
        typeFilter = e.Value?.ToString() ?? "";
        ApplyFilters();
        StateHasChanged();
    }

    private async Task OnStatusFilterChanged(ChangeEventArgs e)
    {
        statusFilter = e.Value?.ToString() ?? "";
        ApplyFilters();
        StateHasChanged();
    }

    private async Task RegisterForCourse(int courseId)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"/dangkykhoahocadd/{courseId}");
        }
        else
        {
            NavigationManager.NavigateTo($"/login?returnUrl=/CourseDetails/{courseId}");
        }
    }

    private string FormatPrice(int price)
    {
        return price.ToString("N0");
    }

    private string GetCourseTypeName(string loaiLopId)
    {
        Dictionary<string, string> courseTypes = new()
        {
            { "1", "Tiếng Anh" },
            { "2", "Tin học" },
            { "3", "Tiếng Nhật" },
            { "4", "Tiếng Trung" }
        };
        return courseTypes.GetValueOrDefault(loaiLopId, "Khóa học");
    }
}