@page "/ThutienList"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject NorthwindService service
@inject IJSRuntime JsRuntime

<!-- Import Tailwind CSS -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="container mx-auto p-4 sm:p-6">
    <PageTitle>Danh sách Thu tiền</PageTitle>

    <AuthorizeView>
        <NotAuthorized>
            <div class="text-center text-red-500">Bạn không có quyền truy cập.</div>
        </NotAuthorized>
        <Authorized>
            <div class="bg-white shadow-md rounded-lg p-6">
                <h3 class="text-2xl font-semibold text-gray-800 mb-4">Danh sách Thu tiền</h3>

                <!-- Filters -->
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Khoản thu</label>
                        <select @bind="LoaiKhoanthuID" @bind:event="oninput" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            <option value="">-- Chọn Khoản thu --</option>
                            @foreach (var item in LoaiKhoanthuList)
                            {
                                <option value="@item.MaLoaiKhoanThu">@item.MoTa</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Kỳ thanh toán</label>
                        <select @bind="KyThanhToanID" @bind:event="oninput" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            <option value="">-- Chọn Kỳ thanh toán --</option>
                            @foreach (var item in KyThanhtoanList)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex flex-wrap gap-2 mb-6">
                    <button @onclick="@(() => OnClick("/ThutienAdd"))" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Thêm mới</button>
                    <button @onclick="@(() => OnClick("/ThutienLapDS"))" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Lập danh sách Tiền Học phí</button>
                    <button @onclick="@(() => OnClick("/ThutienImport"))" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Nhập danh sách thu tiền</button>
                    <button @onclick="@(() => OnClick("/ThutienImportTrangthai"))" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Cập nhật trạng thái</button>
                    <button @onclick="@(() => Export("excel"))" class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700">Export XLS</button>
                </div>

                <!-- Data Table -->
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50 sticky top-0">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mã SV</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Họ đệm</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngày sinh</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Khóa</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngành</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lớp</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Số tiền</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trạng thái</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"></th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var item in ThuTienList)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.id</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.MaSinhVien</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.HoDem</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.Ten</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.Ngaysinh</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <select @bind="selectedKhoahoc" class="border-gray-300 rounded-md shadow-sm">
                                            @foreach (var khoahoc in khoahocList)
                                            {
                                                <option value="@khoahoc">@khoahoc</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <select @bind="selectedNganh" class="border-gray-300 rounded-md shadow-sm">
                                            @foreach (var nganh in nganhList)
                                            {
                                                <option value="@nganh">@nganh</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <select @bind="selectedLop" class="border-gray-300 rounded-md shadow-sm">
                                            @foreach (var lop in lopList)
                                            {
                                                <option value="@lop">@lop</option>
                                            }
                                        </select>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@String.Format("{0:#,##0}", item.SoTien)</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.TrangThai</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <a href="/ThutienEdit/@item.id" target="_blank" class="text-indigo-600 hover:text-indigo-900">Edit</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Summary -->
                <div class="mt-6 text-gray-600">
                    <p>
                        Tổng số sinh viên: @ThuTienList.Count() |
                        Tổng số tiền: @ThuTienList.Sum(o => o.SoTien).Value.ToString("#,##0") |
                        Số sinh viên đã nộp: @ThuTienList.Count(m => m.TrangThai == 1) |
                        Số tiền đã nộp: @ThuTienList.Where(m => m.TrangThai == 1).Sum(o => o.SoTien).Value.ToString("#,##0")
                    </p>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    List<ThuTienView> ThuTienList = new List<ThuTienView>();
    List<string> khoahocList = new List<string>();
    IEnumerable<string> selectedKhoahoc
    {
        get => _selectedKhoahoc;
        set
        {
            _selectedKhoahoc = value;
            if (_selectedKhoahoc != null && !_selectedKhoahoc.Any())
            {
                _selectedKhoahoc = null;
            }
            StateHasChanged();
        }
    }
    private IEnumerable<string> _selectedKhoahoc;

    List<string> nganhList = new List<string>();
    IEnumerable<string> selectedNganh
    {
        get => _selectedNganh;
        set
        {
            _selectedNganh = value;
            if (_selectedNganh != null && !_selectedNganh.Any())
            {
                _selectedNganh = null;
            }
            StateHasChanged();
        }
    }
    private IEnumerable<string> _selectedNganh;

    List<string> lopList = new List<string>();
    IEnumerable<string> selectedLop
    {
        get => _selectedLop;
        set
        {
            _selectedLop = value;
            if (_selectedLop != null && !_selectedLop.Any())
            {
                _selectedLop = null;
            }
            StateHasChanged();
        }
    }
    private IEnumerable<string> _selectedLop;

    List<LoaiKhoanthu> LoaiKhoanthuList = new List<LoaiKhoanthu>();
    List<KyThanhtoan> KyThanhtoanList = new List<KyThanhtoan>();
    private string _loaiKhoanthuID;
    string LoaiKhoanthuID
    {
        get => _loaiKhoanthuID;
        set
        {
            _loaiKhoanthuID = value;
            _ = OnChangeKhoanthu();
        }
    }

    private string _kyThanhToanID;
    string KyThanhToanID
    {
        get => _kyThanhToanID;
        set
        {
            _kyThanhToanID = value;
            _ = OnChangeKyThanhtoan();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Load LoaiKhoanthu
            var response = await Http.GetAsync("api/LoaiKhoanthu/LoaiKhoanthuGetList");
            if (response.IsSuccessStatusCode)
            {
                LoaiKhoanthuList = await response.Content.ReadFromJsonAsync<List<LoaiKhoanthu>>();
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("alert", $"Error: {response.StatusCode}");
            }

            // Load Khoahoc
            var khoahocListResponse = await Http.GetFromJsonAsync<List<Khoahoc>>("api/Khoahoc/KhoahocGetList");
            if (khoahocListResponse != null)
            {
                khoahocList = khoahocListResponse.Select(k => k.Id).ToList();
            }

            // Load Nganh
            var nganhListResponse = await Http.GetFromJsonAsync<List<Nganh>>("api/Nganh/NganhGetList");
            if (nganhListResponse != null)
            {
                nganhList = nganhListResponse.Select(n => n.Id).ToList();
            }

            // Load Lop
            var lopListResponse = await Http.GetFromJsonAsync<List<Lop>>("api/Lop/LopGetList");
            if (lopListResponse != null)
            {
                lopList = lopListResponse.Select(l => l.Id).ToList();
            }

            // Load KyThanhtoan and select the most recent year
            response = await Http.GetAsync("api/KyThanhtoan/KyThanhtoanGetList/" + LoaiKhoanthuID);
            if (response.IsSuccessStatusCode)
            {
                KyThanhtoanList = await response.Content.ReadFromJsonAsync<List<KyThanhtoan>>();
                KyThanhtoanList = KyThanhtoanList.OrderByDescending(k => k.Name).ToList();
                if (KyThanhtoanList.Any())
                {
                    KyThanhToanID = KyThanhtoanList.First().Id;
                    await OnChangeKyThanhtoan();
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error: {e.Message}");
        }
    }

    void OnClick(string link)
    {
        NavigationManager.NavigateTo(link, true);
    }

    async Task OnChangeKyThanhtoan()
    {
        if (!string.IsNullOrEmpty(KyThanhToanID))
        {
            var response = await Http.GetAsync($"api/Thutien/ThutienGetByKyThanhtoan/{LoaiKhoanthuID}/{KyThanhToanID}");
            if (response.IsSuccessStatusCode)
            {
                ThuTienList = await response.Content.ReadFromJsonAsync<List<ThuTienView>>();
                StateHasChanged();
            }
            else if ((int)response.StatusCode == 401)
            {
                NavigationManager.NavigateTo("/Login", true);
            }
        }
    }

    async Task OnChangeKhoanthu()
    {
        if (!string.IsNullOrEmpty(LoaiKhoanthuID))
        {
            var response = await Http.GetAsync($"api/KyThanhtoan/KyThanhtoanGetByKhoanthu/{LoaiKhoanthuID}");
            if (response.IsSuccessStatusCode)
            {
                KyThanhtoanList = await response.Content.ReadFromJsonAsync<List<KyThanhtoan>>();
                KyThanhtoanList = KyThanhtoanList.OrderByDescending(k => k.Name).ToList();
            }
            else
            {
                KyThanhtoanList.Clear();
            }
            StateHasChanged();
        }
    }

    private async Task Export(string type)
    {
        try
        {
            Query q = new Query
            {
                Select = string.Join(",", new[] { "id", "MaSinhVien", "HoDem", "Ten", "Ngaysinh", "KhoahocID", "NganhID", "LopID", "SoTien", "TrangThai" })
            };
            await Task.Run(() => service.Export2("Thutiens", type, q, KyThanhToanID));
        }
        catch (Exception e)
        {
            Console.WriteLine($"Export Error: {e.Message}");
        }
    }
}