@page "/PhongKTXList"
@using Flic.Shared
@using System.Net.Http.Headers
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject NorthwindService service

<div>
    <PageTitle>Danh sách sinh viên</PageTitle>

    <AuthorizeView>
        <NotAuthorized>
            <span>You're not authorize</span>
        </NotAuthorized>
        <Authorized Context="Auth">            
                <div class="row">
                    <h3>Danh sách Sinh viên</h3>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <RadzenButton Click=@(args => OnClick("/PhongKTXAdd")) Text="Thêm mới" ButtonStyle="ButtonStyle.Primary" />                        
                        <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" ButtonStyle="ButtonStyle.Primary" />
                    </div>
                    <RadzenDataGrid @ref="grid" AllowColumnPicking="false" AllowFiltering="true"
                                    FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true"
                                    Data="@_list" TItem="PhongKTX" PageSize="40" AllowColumnResize="true">
                        <Columns>
                            <RadzenDataGridColumn TItem="PhongKTX" Property="Id" Title="ID" Width="100px" Filterable="false" />
                            <RadzenDataGridColumn TItem="PhongKTX" Property="Name" Title="Tên phòng"  />
                            <RadzenDataGridColumn TItem="PhongKTX" Property="Trangthai" Title="Trạng thái" Width="170px" />

                            <RadzenDataGridColumn TItem="PhongKTX" Property="" Title="" Filterable="false">
                                <Template Context="data">
                                    <a href="/PhongKTXEdit/@data.Id">Edit</a> | 
                                <a href="/PhongKTXDelete/@data.Id">Delete</a>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </div>

         
        </Authorized>
    </AuthorizeView>
</div>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    private StudentSearchOption item = new StudentSearchOption();
    private List<PhongKTX> _list;
    string ErrMessage;
    RadzenDataGrid<PhongKTX> grid;
    
    bool busy;
    bool isLoading;
    int count;

    

    void OnClick(string link)
    {
        NavigationManager.NavigateTo(link, true);
    }

    async Task OnBusyClick()
    {
        busy = true;
        await Task.Delay(2000);
        busy = false;
    }
    protected override async Task OnInitializedAsync()
    {
       try{
            var response = await Http.GetAsync("api/PhongKTX/PhongKTXGetList");
            response.EnsureSuccessStatusCode();
            _list = await response.Content.ReadFromJsonAsync<List<PhongKTX>>();
            ErrMessage = "";
        }catch(Exception e){
            Console.WriteLine(e.Message);
            string ErrMessage = e.Message;
        }

    }
    void Change(object value)
    {
        grid.Reload();
    }

    public void Export(string type)
    {
        try
        {
            Query q = new Query()
                {
                    OrderBy = grid.Query.OrderBy,
                    Filter = grid.Query.Filter,
                    Select = string.Join(",", grid.ColumnsCollection.Where(c => c.GetVisible()))//.Select(c => c.Property))
                };
            service.Export("Students", type, q);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}
