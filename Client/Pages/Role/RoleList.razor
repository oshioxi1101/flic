@page "/RoleList"
@using Flic.Shared
@using System.Net.Http.Headers
@inject HttpClient _httpClient
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
<!-- Import Tailwind CSS -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Danh sách vai trò</h1>
        <a href="/RoleAdd"
           class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition duration-300 flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            Thêm mới
        </a>
    </div>

    @if (list == null)
    {
        <div class="text-center py-8">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
            <p class="mt-2 text-gray-600">Đang tải...</p>
        </div>
    }
    else if (list.Count == 0)
    {
        <div class="text-center py-8 bg-gray-50 rounded-lg">
            <p class="text-gray-600">Không có vai trò nào được tìm thấy.</p>
        </div>
    }
    else
    {
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên vai trò</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên chuẩn hóa</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Concurrency Stamp</th>
                            <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var item in list)
                        {
                            <tr class="hover:bg-gray-50 transition duration-150">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Id</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Name</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.NormalizedName</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.ConcurrencyStamp</td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <a href="/RoleEdit/@item.Id"
                                       class="text-blue-600 hover:text-blue-800 mr-4">Sửa</a>
                                    <a href="/RoleDelete/@item.Id"
                                       class="text-red-600 hover:text-red-800"
                                       onclick="return confirm('Bạn có chắc muốn xóa vai trò này?')">Xóa</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    List<Microsoft.AspNetCore.Identity.IdentityRole> list = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await _httpClient.GetAsync("api/Role/GetList");
            response.EnsureSuccessStatusCode();
            list = await response.Content.ReadFromJsonAsync<List<Microsoft.AspNetCore.Identity.IdentityRole>>() ?? new();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}