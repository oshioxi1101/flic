<!-- Import Tailwind CSS -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

@page "/RoleAdd/"
@using Flic.Shared
@using Flic.Shared.AspIdentity
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<div class="min-h-screen bg-gray-100 flex items-center justify-center py-8">
    <div class="w-full max-w-md bg-white shadow-lg rounded-lg p-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-6 text-center">Thêm mới Vai trò</h2>

        <form class="space-y-6">
            <!-- Role Name Field -->
            <div>
                <label for="CountryCode" class="block text-sm font-medium text-gray-700 mb-1">Tên vai trò</label>
                <input id="CountryCode"
                       class="w-full border border-gray-300 rounded-md p-2 focus:ring-indigo-500 focus:border-indigo-500"
                       @bind="@role"
                       placeholder="Nhập tên vai trò" />
                @if (string.IsNullOrEmpty(role) && showValidation)
                {
                    <p class="text-red-600 text-sm mt-1">Vui lòng nhập tên vai trò</p>
                }
            </div>

            <!-- Buttons -->
            <div class="flex justify-end space-x-3">
                <button type="button"
                        class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition"
                        @onclick="@Save">
                    Lưu
                </button>
                <button type="button"
                        class="bg-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-400 transition"
                        @onclick="@Cancel">
                    Hủy
                </button>
            </div>
        </form>
    </div>
</div>

@code {
    RoleView item = new RoleView();
    string? role;
    bool showValidation = false;

    protected async Task Save()
    {
        if (string.IsNullOrEmpty(role))
        {
            showValidation = true;
            return;
        }

        try
        {
            var response = await Http.PostAsJsonAsync("api/Role/Add", @role);
            await JsRuntime.InvokeVoidAsync("alert", "Saved Successfully!");
            NavigationManager.NavigateTo("RoleList");
        }
        catch (Exception e)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Error:" + e.Message);
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("RoleList");
    }
}